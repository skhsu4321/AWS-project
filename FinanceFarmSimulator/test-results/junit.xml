<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="18" failures="0" errors="0" time="2.796">
  <testsuite name="Income Calculations" errors="0" failures="0" skipped="0" timestamp="2025-09-30T11:05:05" time="2.463" tests="18">
    <testcase classname="Income Calculations calculateStreakMultiplier returns 1x for zero streak" name="Income Calculations calculateStreakMultiplier returns 1x for zero streak" time="0.01">
    </testcase>
    <testcase classname="Income Calculations calculateStreakMultiplier returns 1x for negative streak (edge case)" name="Income Calculations calculateStreakMultiplier returns 1x for negative streak (edge case)" time="0.002">
    </testcase>
    <testcase classname="Income Calculations calculateStreakMultiplier calculates correct multiplier for low streaks" name="Income Calculations calculateStreakMultiplier calculates correct multiplier for low streaks" time="0.002">
    </testcase>
    <testcase classname="Income Calculations calculateStreakMultiplier calculates correct multiplier for medium streaks" name="Income Calculations calculateStreakMultiplier calculates correct multiplier for medium streaks" time="0.003">
    </testcase>
    <testcase classname="Income Calculations calculateStreakMultiplier caps multiplier at 2x for high streaks" name="Income Calculations calculateStreakMultiplier caps multiplier at 2x for high streaks" time="0.005">
    </testcase>
    <testcase classname="Income Calculations calculateStreakMultiplier handles decimal streak values correctly" name="Income Calculations calculateStreakMultiplier handles decimal streak values correctly" time="0.001">
    </testcase>
    <testcase classname="Income Calculations calculateFertilizerBoost calculates boost with 1x multiplier" name="Income Calculations calculateFertilizerBoost calculates boost with 1x multiplier" time="0.001">
    </testcase>
    <testcase classname="Income Calculations calculateFertilizerBoost calculates boost with streak multipliers" name="Income Calculations calculateFertilizerBoost calculates boost with streak multipliers" time="0.001">
    </testcase>
    <testcase classname="Income Calculations calculateFertilizerBoost handles zero income amount" name="Income Calculations calculateFertilizerBoost handles zero income amount" time="0.003">
    </testcase>
    <testcase classname="Income Calculations calculateFertilizerBoost handles decimal amounts" name="Income Calculations calculateFertilizerBoost handles decimal amounts" time="0.002">
    </testcase>
    <testcase classname="Income Calculations calculateFertilizerBoost handles large amounts" name="Income Calculations calculateFertilizerBoost handles large amounts" time="0.002">
    </testcase>
    <testcase classname="Income Calculations Integrated streak and fertilizer calculations calculates realistic income scenarios" name="Income Calculations Integrated streak and fertilizer calculations calculates realistic income scenarios" time="0.002">
    </testcase>
    <testcase classname="Income Calculations Integrated streak and fertilizer calculations calculates different income amounts with same streak" name="Income Calculations Integrated streak and fertilizer calculations calculates different income amounts with same streak" time="0.005">
    </testcase>
    <testcase classname="Income Calculations Integrated streak and fertilizer calculations demonstrates progression incentive" name="Income Calculations Integrated streak and fertilizer calculations demonstrates progression incentive" time="0.005">
    </testcase>
    <testcase classname="Income Calculations Edge cases and error handling handles negative income amounts gracefully" name="Income Calculations Edge cases and error handling handles negative income amounts gracefully" time="0.001">
    </testcase>
    <testcase classname="Income Calculations Edge cases and error handling handles very small multipliers" name="Income Calculations Edge cases and error handling handles very small multipliers" time="0.002">
    </testcase>
    <testcase classname="Income Calculations Edge cases and error handling handles very large multipliers" name="Income Calculations Edge cases and error handling handles very large multipliers" time="0.004">
    </testcase>
    <testcase classname="Income Calculations Edge cases and error handling maintains precision with floating point operations" name="Income Calculations Edge cases and error handling maintains precision with floating point operations" time="0.003">
    </testcase>
  </testsuite>
</testsuites>